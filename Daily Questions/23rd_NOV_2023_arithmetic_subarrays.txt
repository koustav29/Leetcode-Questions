class Solution {
public:
    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {
        int n = nums.size();
        int m = l.size();
        vector<bool> ans;
        for(int i=0;i<m;i++){
            int L = l[i];
            int R = r[i];
            if(R-L==1) ans.push_back(true);
            else{
                priority_queue<int,vector<int>,greater<int>> h;
                auto start = nums.begin() + L;
                auto end = nums.begin() + R + 1;
                vector<int> temp(R - L + 1);
                copy(start, end, temp.begin());
                sort(temp.begin(),temp.end());
                bool flag = true;
                int diff = temp[1]-temp[0];
                for(int j=1;j<temp.size();j++){
                    if(temp[j]-temp[j-1]!=diff){
                        flag = false;
                        break;
                    }
                }
                if(flag) ans.push_back(true);
                else ans.push_back(false);
            }
        }
        return ans;
    }
};
